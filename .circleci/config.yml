version: 2.1

orbs:
  node: circleci/node@4.7.0

parameters:
  triggering-pipeline-id:
    type: string
    default: ""

commands:
  approve-job-in-triggering-pipeline:
    steps:
      - run:
          name: Ping CircleCI API to get workflow
          command: |
            echo << pipeline.parameters.triggering-pipeline-id >>
            if ! [ -z "<< pipeline.parameters.triggering-pipeline-id >>" ] 
            then
              workflow_id=$(curl --request GET \
                --url https://circleci.com/api/v2/pipeline/<< pipeline.parameters.triggering-pipeline-id >>/workflow \
                --header "Circle-Token: $CIRCLECI_API_KEY" \
                --header "content-type: application/json" \
              | jq -r '.items[0].id')

              echo $workflow_id
              
              waiting_job_id=$(curl --request GET \
                --url https://circleci.com/api/v2/workflow/$workflow_id/job \
                --header "Circle-Token: $CIRCLECI_API_KEY" \
                --header "content-type: application/json" \
              | jq -r '.items[] | select(.name == "wait-for-triggered-pipeline").id')

              echo $waiting_job_id

              curl --request POST \
                --url https://circleci.com/api/v2/workflow/$workflow_id/approve/$waiting_job_id \
                --header "Circle-Token: $CIRCLECI_API_KEY" \
                --header "content-type: application/json"

            fi
          when: always
          

jobs:
  build-and-test:
    parameters:
      node-version:
        type: string
        default: "15.10.0"
    docker:
      - image: cimg/node:<< parameters.node-version >>
    steps:
      - checkout
      - node/install-packages
      - run:
          command: |
           npm run test-ci
      
workflows:
  node-test-and-deploy:
    jobs:
      - build-and-test:
          matrix:
            parameters:
              node-version: ["20.10"]
          post-steps:
            - approve-job-in-triggering-pipeline
          context: 
            - circleci-api
          

  


